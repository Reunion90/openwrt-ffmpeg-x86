name: Build FFmpeg for OpenWrt x86_64

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          clang \
          flex \
          bison \
          g++ \
          gawk \
          gcc-multilib \
          g++-multilib \
          gettext \
          git \
          libncurses5-dev \
          libssl-dev \
          python3-distutils \
          rsync \
          unzip \
          zlib1g-dev \
          file \
          wget \
          subversion \
          qemu-utils \
          zstd
          
    - name: Set up build environment
      run: |
        df -h
        echo "Available space:"
        df -h /
        
    - name: Download OpenWrt SDK
      run: |
        cd /tmp
        wget https://downloads.openwrt.org/releases/24.10.0/targets/x86/64/openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
        tar --zstd -xf openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst
        mv openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64 /tmp/openwrt-sdk
        
    - name: Copy package files
      run: |
        mkdir -p /tmp/openwrt-sdk/package/multimedia/ffmpeg
        cp -r package/* /tmp/openwrt-sdk/package/multimedia/ffmpeg/
        # Verify package files were copied
        ls -la /tmp/openwrt-sdk/package/multimedia/ffmpeg/
        echo "Checking Makefile content:"
        head -20 /tmp/openwrt-sdk/package/multimedia/ffmpeg/Makefile
        
    - name: Update feeds
      run: |
        cd /tmp/openwrt-sdk
        # Add packages feed which contains x264
        echo "src-git packages https://git.openwrt.org/feed/packages.git;openwrt-24.10" >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        # Specifically install x264 package
        ./scripts/feeds install x264
        
    - name: Configure build
      run: |
        cd /tmp/openwrt-sdk
        make defconfig
        echo "CONFIG_PACKAGE_ffmpeg=y" >> .config
        echo "CONFIG_PACKAGE_ffprobe=y" >> .config
        echo "CONFIG_PACKAGE_libffmpeg-full=y" >> .config
        echo "CONFIG_PACKAGE_libx264=y" >> .config
        echo "CONFIG_FFMPEG_ENCODER_LIBX264=y" >> .config
        echo "CONFIG_FFMPEG_DECODER_H264=y" >> .config
        make defconfig
        # Show the final configuration
        grep -E "(FFMPEG|x264)" .config || echo "No FFmpeg/x264 config found"
        
    - name: Build FFmpeg
      run: |
        cd /tmp/openwrt-sdk
        # Check if the package exists before building
        if [ ! -d "package/multimedia/ffmpeg" ]; then
          echo "ERROR: FFmpeg package not found!"
          find package -name "*ffmpeg*" -type d
          exit 1
        fi
        
        # Try to build x264 first if available
        if make package/libs/x264/compile V=s -j$(nproc) 2>/dev/null; then
          echo "x264 built successfully"
        else
          echo "x264 build failed or not available, continuing..."
        fi
        
        # Build FFmpeg
        echo "Building FFmpeg..."
        make package/multimedia/ffmpeg/compile V=s -j$(nproc)
        
    - name: Collect artifacts
      run: |
        cd /tmp/openwrt-sdk
        mkdir -p /tmp/artifacts
        
        # Show what packages were built
        echo "All built packages:"
        find bin/packages -name "*.ipk" | head -20
        
        # Collect multimedia packages
        find bin/packages -name "*.ipk" -path "*/multimedia/*" -exec cp {} /tmp/artifacts/ \; || true
        # Collect FFmpeg packages specifically
        find bin/packages -name "*ffmpeg*" -exec cp {} /tmp/artifacts/ \; || true
        # Collect x264 packages
        find bin/packages -name "*x264*" -exec cp {} /tmp/artifacts/ \; || true
        
        echo "Collected artifacts:"
        ls -la /tmp/artifacts/
        
        # Ensure we have at least one package
        if [ $(ls /tmp/artifacts/*.ipk 2>/dev/null | wc -l) -eq 0 ]; then
          echo "ERROR: No IPK packages found!"
          echo "Available packages:"
          find bin/packages -name "*.ipk" | head -10
          exit 1
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-openwrt-x86_64-packages
        path: /tmp/artifacts/*.ipk
        retention-days: 30
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: /tmp/artifacts/*.ipk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
